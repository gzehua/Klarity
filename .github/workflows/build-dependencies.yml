name: Build dependencies

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            triplet: x64-linux
            binary_ext: so

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake g++ unzip curl tar pkg-config nasm

      - name: Set up vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          cd vcpkg
          ./bootstrap-vcpkg.sh
        working-directory: ${{ runner.temp }}

      - name: Install vcpkg packages
        run: |
          ${{ runner.temp }}/vcpkg/vcpkg install --triplet ${{ matrix.triplet }}
        working-directory: ${{ github.workspace }}/core/src/main/cpp
        env:
          VCPKG_ROOT: ${{ runner.temp }}/vcpkg


      - name: Configure project
        run: |
          cmake -B build -S . \
            -DFFMPEG_INCLUDE="${{ runner.temp }}/vcpkg_installed/include" \
            -DPORTAUDIO_INCLUDE="${{ runner.temp }}/vcpkg_installed/include" \
            -DFFMPEG_LIB="${{ runner.temp }}/vcpkg_installed/lib" \
            -DPORTAUDIO_LIB="${{ runner.temp }}/vcpkg_installed/lib" \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_TOOLCHAIN_FILE="${{ runner.temp }}/vcpkg/scripts/buildsystems/vcpkg.cmake"

      - name: Build project
        run: cmake --build build --config Release --parallel

      - name: Copy binaries
        run: |
          mkdir -p output/bin
          cp -r build/* output/bin/
          cp -r ${{ runner.temp }}/vcpkg_installed/lib/*${{ matrix.binary_ext }}* output/bin/
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: klarity-linux-bin
          path: output/bin