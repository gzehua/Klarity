name: Build dependencies

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    env:
      VCPKG_DIR: ${{ github.workspace }}\vcpkg
      BUILD_DIR: ${{ github.workspace }}\build
      BIN_FOLDER: ${{ github.workspace }}\bin
      SOURCE_DIR: ${{ github.workspace }}\core\src\main\cpp

    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Install dependencies
        run: choco install -y cmake ninja git

      - name: Clone vcpkg
        run: git clone https://github.com/Microsoft/vcpkg.git ${{ env.VCPKG_DIR }}

      - name: Bootstrap vcpkg
        run: ${{ env.VCPKG_DIR }}\bootstrap-vcpkg.bat

      - name: Create dirs
        run: |
          mkdir bin
          mkdir bin\klarity
          mkdir include
          mkdir include\ffmpeg
          mkdir include\portaudio

      - name: Install FFmpeg
        run: |
          ${{ env.VCPKG_DIR }}\vcpkg install ffmpeg[core,avcodec,avdevice,avfilter,avformat,swresample,swscale,amf,opencl,dav1d,qsv]:x64-windows
          robocopy ${{ env.VCPKG_DIR }}\installed\x64-windows\bin ${{ env.BIN_FOLDER }} /E /NFL /NDL /NJH /NJS
          robocopy ${{ env.VCPKG_DIR }}\installed\x64-windows\include ${{ env.BIN_FOLDER }}\..\include\ffmpeg /E /NFL /NDL /NJH /NJS
          robocopy ${{ env.VCPKG_DIR }}\installed\x64-windows\lib ${{ env.BIN_FOLDER }} /E /NFL /NDL /NJH /NJS

      - name: Install PortAudio
        run: |
          ${{ env.VCPKG_DIR }}\vcpkg install portaudio:x64-windows
          robocopy ${{ env.VCPKG_DIR }}\installed\x64-windows\bin ${{ env.BIN_FOLDER }} portaudio.dll /NFL /NDL /NJH /NJS
          robocopy ${{ env.VCPKG_DIR }}\installed\x64-windows\include ${{ env.BIN_FOLDER }}\..\include\portaudio /E /NFL /NDL /NJH /NJS
          robocopy ${{ env.VCPKG_DIR }}\installed\x64-windows\lib ${{ env.BIN_FOLDER }} /E /NFL /NDL /NJH /NJS

      - name: Build Klarity
        run: |
          mkdir ${{ env.BUILD_DIR }}
          cd ${{ env.BUILD_DIR }}
          cmake "${{ env.SOURCE_DIR }}" -G "Ninja" `
            -DCMAKE_BUILD_TYPE=Release `
            -DCMAKE_INSTALL_PREFIX="${{ env.BIN_FOLDER }}\klarity" `
            -DBIN_FOLDER="${{ env.BIN_FOLDER }}" `
            -DCMAKE_TOOLCHAIN_FILE="${{ env.VCPKG_DIR }}\scripts\buildsystems\vcpkg.cmake"
          cmake --build . --target klarity
        shell: powershell

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: klarity-windows-x64
          path: |
            bin
            include