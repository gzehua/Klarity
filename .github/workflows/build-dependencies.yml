name: Build dependencies

on:
  workflow_dispatch:

jobs:
  compile:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            triplet: x64-windows-static

          #          - os: macos-latest-arm64
          #            triplet: arm64-osx

          - os: macos-13
            triplet: x64-osx

          #          - os: ubuntu-latest-arm64
          #            triplet: arm64-linux

          - os: ubuntu-latest
            triplet: x64-linux

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up nasm
        if: matrix.os != 'windows-latest'
        uses: ilammy/setup-nasm@v1

      - name: Set up vcpkg
        shell: bash
        run: |
          git clone https://github.com/Microsoft/vcpkg.git
          ./vcpkg/bootstrap-vcpkg.sh

      #      - name: Install dependencies (non-Windows)
      #        if: runner.os != 'Windows'
      #        shell: bash
      #        run: |
      #          ./vcpkg/vcpkg install \
      #          --x-manifest-root=${{ github.workspace }}/library/src/main/cpp \
      #          --x-install-root=${{ github.workspace }}/library/src/main/cpp/vcpkg_installed
      #
      #      - name: Install dependencies (Windows)
      #        if: runner.os == 'Windows'
      #        shell: cmd
      #        run: |
      #          .\vcpkg\vcpkg.exe install ^
      #            --x-manifest-root=${{ github.workspace }}\library\src\main\cpp ^
      #            --x-install-root=${{ github.workspace }}\library\src\main\cpp\vcpkg_installed

      - name: Configure project (Windows)
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          cmake -B library\src\main\cpp\build-${{ matrix.triplet }} -S library\src\main\cpp ^
          -DCMAKE_BUILD_TYPE=Release ^
          -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}\vcpkg\scripts\buildsystems\vcpkg.cmake ^
          -DVCPKG_TARGET_TRIPLET=${{ matrix.triplet }}

      - name: Configure project (macOS)
        if: matrix.os == 'macos-13'
        shell: bash
        run: |
          cmake -B library/src/main/cpp/build-${{ matrix.triplet }} -S library/src/main/cpp \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake \
            -DVCPKG_TARGET_TRIPLET=${{ matrix.triplet }}

      - name: Configure project (Linux)
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          cmake -B library/src/main/cpp/build-${{ matrix.triplet }} -S library/src/main/cpp \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_SHARED_LINKER_FLAGS="-Wl,-Bsymbolic" \
            -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake \
            -DVCPKG_TARGET_TRIPLET=${{ matrix.triplet }}

      - name: Build project (Windows)
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          cmake --build library\src\main\cpp\build-${{ matrix.triplet }} --config Release --parallel

      - name: Build project (non-Windows)
        if: matrix.os != 'windows-latest'
        shell: bash
        run: |
          cmake --build library/src/main/cpp/build-${{ matrix.triplet }} --config Release --parallel

      #      - name: Upload dependencies
      #        uses: actions/upload-artifact@v4
      #        with:
      #          name: ${{ matrix.os }}-dependencies
      #          path: ${{ github.workspace }}\library\src\main\cpp\vcpkg_installed\${{ matrix.triplet }}\**

      - name: Upload dependencies (Windows)
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-dependencies
          path: ${{ github.workspace }}\library\src\main\cpp\build-${{ matrix.triplet }}\lib\**

      - name: Upload dependencies (non-Windows)
        if: runner.os != 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-dependencies
          path: ${{ github.workspace }}/library/src/main/cpp/build-${{ matrix.triplet }}/lib/**