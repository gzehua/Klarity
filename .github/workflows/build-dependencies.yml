name: Build Dependencies

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ windows-latest, macos-latest, ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up vcpkg (Windows)
        if: runner.os == 'Windows'
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          cd vcpkg
          bootstrap-vcpkg.bat
          vcpkg.exe update
          vcpkg.exe upgrade --no-dry-run
        shell: cmd

      - name: Set up vcpkg (macOS/Linux)
        if: runner.os != 'Windows'
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          cd vcpkg
          ./bootstrap-vcpkg.sh
          ./vcpkg update
          ./vcpkg upgrade --no-dry-run
        shell: bash

      - name: Install FFmpeg and PortAudio
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            # Windows
            vcpkg\vcpkg.exe install ffmpeg[nvcodec,qsv]:x64-windows
            vcpkg\vcpkg.exe install portaudio:x64-windows
            echo "BIN_FOLDER=$GITHUB_WORKSPACE/vcpkg/installed/x64-windows/bin" >> $GITHUB_ENV
            echo "INCLUDE_FOLDER=$GITHUB_WORKSPACE/vcpkg/installed/x64-windows/include" >> $GITHUB_ENV
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            # macOS
            ./vcpkg/vcpkg install ffmpeg[opencl]:x64-osx
            ./vcpkg/vcpkg install portaudio:x64-osx
            echo "BIN_FOLDER=$GITHUB_WORKSPACE/vcpkg/installed/x64-osx/bin" >> $GITHUB_ENV
            echo "INCLUDE_FOLDER=$GITHUB_WORKSPACE/vcpkg/installed/x64-osx/include" >> $GITHUB_ENV
          else
            # Linux
            sudo apt update && sudo apt install -y libva-dev libva2
            ./vcpkg/vcpkg install ffmpeg[nvcodec,qsv]:x64-linux
            ./vcpkg/vcpkg install portaudio:x64-linux
            echo "BIN_FOLDER=$GITHUB_WORKSPACE/vcpkg/installed/x64-linux/bin" >> $GITHUB_ENV
            echo "INCLUDE_FOLDER=$GITHUB_WORKSPACE/vcpkg/installed/x64-linux/include" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Configure CMake
        run: |
          cmake -B build -S core/src/main/cpp \
            -DCMAKE_TOOLCHAIN_FILE=$GITHUB_WORKSPACE/vcpkg/scripts/buildsystems/vcpkg.cmake \
            -DBUILD_SHARED_LIBS=ON \
            -DBIN_FOLDER=$BIN_FOLDER
        shell: bash

      - name: Build Klarity
        run: |
          cmake --build build
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.os }}
          path: |
            build/bin/avcodec
            build/bin/avformat
            build/bin/avutil
            build/bin/swresample
            build/bin/swscale
            build/bin/klarity
            $INCLUDE_FOLDER/ffmpeg
            $INCLUDE_FOLDER/portaudio
