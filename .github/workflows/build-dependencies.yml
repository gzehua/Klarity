name: Build dependencies

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            triplet: x64-linux
            binary_ext: .so

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up nasm
        uses: ilammy/setup-nasm@v1.5.2

      - name: Set up vcpkg
        id: vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgJsonGlob: '**/core/src/main/cpp/vcpkg.json'
          runVcpkgInstall: 'true'
          doNotCache: 'false'

      - name: Debug installed packages
        run: |
          ls -la "${{ github.workspace }}/build/vcpkg_installed"

      - name: Set up build essentials
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential

      - name: Set up CMake
        uses: lukka/get-cmake@latest

      - name: Configure CMake
        run: |
          cmake -B "${{ github.workspace }}/build" \
            -S ${{ github.workspace }}/core/src/main/cpp \
            -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake \
            -DCMAKE_BUILD_TYPE=Debug

      - name: Build
        run: |
          cmake --build "${{ github.workspace }}/build" \
            --config Debug \
            --parallel $(nproc)

      - name: Find binaries to upload
        id: find-binaries
        run: |
          echo "binaries=$(find "${{ github.workspace }}/build" \
            -type f \
            \( -name "*${{ matrix.binary_ext }}" \
               -o -name '*.a' \
               -o -name '*.bin' \
               -o -perm -u=x \
            \))" >> $GITHUB_OUTPUT

      - name: Upload binaries as artifact
        if: steps.find-binaries.outputs.binaries != ''
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.os }}
          path: ${{ steps.find-binaries.outputs.binaries }}