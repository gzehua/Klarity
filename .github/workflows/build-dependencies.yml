name: Build dependencies

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [ x86, x64 ]
    env:
      VCPKG_DIR: ${{ github.workspace }}\vcpkg
      BUILD_DIR: ${{ github.workspace }}\build
      BIN_FOLDER: ${{ github.workspace }}\bin

    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}

      - name: Install dependencies
        run: choco install -y cmake ninja git

      - name: Clone vcpkg
        run: git clone https://github.com/Microsoft/vcpkg.git ${{ env.VCPKG_DIR }}

      - name: Bootstrap vcpkg
        run: ${{ env.VCPKG_DIR }}\bootstrap-vcpkg.bat

      - name: Create dirs
        run: |
          mkdir bin
          mkdir bin\klarity
          mkdir include

      - name: Install FFmpeg with LGPL-compatible features and hardware acceleration
        run: |
          ${{ env.VCPKG_DIR }}\vcpkg install ffmpeg[core,avcodec,avdevice,avfilter,avformat,swresample,swscale,amf,opencl,dav1d,qsv]:${{ matrix.arch }}-windows --triplet=${{ matrix.arch }}-windows
          # Copy FFmpeg files to our bin directory
          xcopy /E /Y ${{ env.VCPKG_DIR }}\installed\${{ matrix.arch }}-windows\bin ${{ env.BIN_FOLDER }}
          xcopy /E /Y ${{ env.VCPKG_DIR }}\installed\${{ matrix.arch }}-windows\include ${{ env.BIN_FOLDER }}\..\include
          xcopy /E /Y ${{ env.VCPKG_DIR }}\installed\${{ matrix.arch }}-windows\lib ${{ env.BIN_FOLDER }}

      - name: Install PortAudio
        run: |
          ${{ env.VCPKG_DIR }}\vcpkg install portaudio:${{ matrix.arch }}-windows --triplet=${{ matrix.arch }}-windows
          # Copy PortAudio files to our bin directory
          xcopy /E /Y ${{ env.VCPKG_DIR }}\installed\${{ matrix.arch }}-windows\bin\portaudio.dll ${{ env.BIN_FOLDER }}
          xcopy /E /Y ${{ env.VCPKG_DIR }}\installed\${{ matrix.arch }}-windows\include ${{ env.BIN_FOLDER }}\..\include\portaudio
          xcopy /E /Y ${{ env.VCPKG_DIR }}\installed\${{ matrix.arch }}-windows\lib ${{ env.BIN_FOLDER }}

      - name: Build Klarity
        run: |
          mkdir ${{ env.BUILD_DIR }}
          cd ${{ env.BUILD_DIR }}
          cmake .. -G "Ninja" `
            -DCMAKE_BUILD_TYPE=Release `
            -DCMAKE_INSTALL_PREFIX="${{ env.BIN_FOLDER }}\klarity" `
            -DBIN_FOLDER="${{ env.BIN_FOLDER }}" `
            -DCMAKE_TOOLCHAIN_FILE="${{ env.VCPKG_DIR }}\scripts\buildsystems\vcpkg.cmake"
          cmake --build . --target klarity
        shell: powershell

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: klarity-windows-${{ matrix.arch }}
          path: |
            bin
            include