name: Build Klarity on Windows

on:
  workflow_dispatch:  # Allows manual execution

jobs:
  build_klarity_windows:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Chocolatey Dependencies
        run: |
          choco install nasm yasm cmake pkgconfiglite -y

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          install: >-
            base-devel
            git
            autoconf
            automake
            libtool
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-nasm
            mingw-w64-x86_64-yasm
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-libiconv
            mingw-w64-x86_64-xz
            mingw-w64-x86_64-zlib

      - name: Clone FFmpeg
        run: git clone --branch n7.1 --depth 1 https://github.com/FFmpeg/FFmpeg.git

      - name: Build FFmpeg 7.1
        shell: msys2 {0}
        run: |
          cd FFmpeg
          ./configure --enable-shared --disable-static --disable-autodetect --prefix=$GITHUB_WORKSPACE/deps
          make -j$(nproc)
          make install

      - name: Clone PortAudio
        run: git clone --branch v19.7.0 --depth 1 https://github.com/PortAudio/portaudio.git

      - name: Build PortAudio v19.7.0
        shell: msys2 {0}
        run: |
          cd portaudio
          cmake -S . -B build -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/deps
          cmake --build build --config Release --target install

      - name: Organize Required Files
        shell: pwsh
        run: |
          if (-not $env:GITHUB_WORKSPACE) {
            $env:GITHUB_WORKSPACE = (Get-Location).Path
            Write-Host "GITHUB_WORKSPACE is now: $env:GITHUB_WORKSPACE"
          }

          $depsPath = Join-Path -Path $env:GITHUB_WORKSPACE -ChildPath "deps"
          if (!(Test-Path "$depsPath")) {
            New-Item -ItemType Directory -Path "$depsPath" -Force
          }

          if (!(Test-Path "$depsPath\\bin")) {
            New-Item -ItemType Directory -Path "$depsPath\\bin" -Force
          }
          if (!(Test-Path "$depsPath\\include")) {
            New-Item -ItemType Directory -Path "$depsPath\\include" -Force
          }

          $dlls = @(
            "av*.dll",
            "sw*.dll"
          )

          foreach ($dll in $dlls) {
            $sourcePath = Join-Path -Path "C:\\msys64\\mingw64\\bin" -ChildPath $dll
            Copy-Item -Path $sourcePath -Destination "$depsPath\\bin\\" -Force -ErrorAction SilentlyContinue
          }

      - name: Upload FFmpeg & PortAudio
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-portaudio-windows
          path: deps/

      - name: Build Klarity Library (Windows)
        shell: msys2 {0}
        run: |
          cd core/src/main/cpp
          cmake -DCMAKE_PREFIX_PATH=$GITHUB_WORKSPACE/deps -B build -S .
          cmake --build build --config Release

      - name: Upload Klarity Library
        uses: actions/upload-artifact@v4
        with:
          name: klarity-windows
          path: core/src/main/cpp/build/
