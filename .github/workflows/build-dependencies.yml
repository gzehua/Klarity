name: Build dependencies

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
#          - os: ubuntu-latest
#            triplet: x64-linux
#            os_folder: linux
#          - os: macos-latest
#            triplet: x64-osx
#            os_folder: macos
          - os: windows-latest
            triplet: x64-windows
            os_folder: windows

    env:
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg
      INSTALL_DIR: ${{ github.workspace }}/install
      VCPKG_TRIPLET: ${{ matrix.triplet }}
      OS_FOLDER: ${{ matrix.os_folder }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg.git ${{ env.VCPKG_ROOT }}
          ./vcpkg/bootstrap-vcpkg.sh || ./vcpkg/bootstrap-vcpkg.bat

      - name: Install dependencies using vcpkg
        run: |
          ${{ env.VCPKG_ROOT }}/vcpkg install ffmpeg portaudio --triplet ${{ env.VCPKG_TRIPLET }}      

      - name: Configure CMake
        run: |
          cmake -S core/src/main/cpp -B build \
            -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_DIR }} \
            -DBIN_FOLDER=${{ github.workspace }}/build/bin


      - name: Build native library
        run: cmake --build build --config Release

      - name: Copy platform-specific binaries to resources
        run: |
          mkdir -p core/src/main/resources/bin/${{ env.OS_FOLDER }}

          cp build/*.{dll,so,dylib} core/src/main/resources/bin/${{ env.OS_FOLDER }}/ 2>/dev/null || true
          cp ${{ env.VCPKG_ROOT }}/installed/${{ env.VCPKG_TRIPLET }}/bin/*ffmpeg* core/src/main/resources/bin/${{ env.OS_FOLDER }}/ || true
          cp ${{ env.VCPKG_ROOT }}/installed/${{ env.VCPKG_TRIPLET }}/bin/*portaudio* core/src/main/resources/bin/${{ env.OS_FOLDER }}/ || true

      - name: Build JARs
        run: |
          ./gradlew :core:shadowJar
          ./gradlew :compose:shadowJar
          ./gradlew :example:shadowJar

      - name: Copy binaries
        run: |
          mkdir -p artifacts/${{ matrix.os }}/bin

          cp build/*.so* artifacts/${{ matrix.os }}/bin/klarity/ 2>/dev/null || true
          cp build/*.dylib artifacts/${{ matrix.os }}/bin/klarity/ 2>/dev/null || true
          cp build/*.dll artifacts/${{ matrix.os }}/bin/klarity/ 2>/dev/null || true

          cp -r ${{ env.VCPKG_ROOT }}/installed/${{ env.VCPKG_TRIPLET }}/bin/*ffmpeg* artifacts/${{ matrix.os }}/bin/ffmpeg/ || true
          cp -r ${{ env.VCPKG_ROOT }}/installed/${{ env.VCPKG_TRIPLET }}/bin/*portaudio* artifacts/${{ matrix.os }}/bin/portaudio/ || true

          cp -r ${{ env.VCPKG_ROOT }}/installed/${{ env.VCPKG_TRIPLET }}/include/ffmpeg artifacts/${{ matrix.os }}/include/ || true
          cp -r ${{ env.VCPKG_ROOT }}/installed/${{ env.VCPKG_TRIPLET }}/include/portaudio artifacts/${{ matrix.os }}/include/ || true

      - name: Copy JARs
        run: |
          mkdir -p artifacts/${{ matrix.os }}/jar
          cp core/build/libs/*.jar artifacts/${{ matrix.os }}/jar/core.jar || true
          cp compose/build/libs/*.jar artifacts/${{ matrix.os }}/jar/compose.jar || true
          cp example/build/libs/*.jar artifacts/${{ matrix.os }}/jar/example.jar || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: klarity-${{ matrix.os }}
          path: artifacts/${{ matrix.os }}