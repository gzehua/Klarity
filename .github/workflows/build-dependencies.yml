name: Build dependencies

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    env:
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg
      INSTALL_DIR: ${{ github.workspace }}/install

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: ${{ env.VCPKG_ROOT }}
          vcpkgGitCommitId: '2025.04.09'
          runVcpkgInstall: true
          vcpkgJsonGlob: '**/vcpkg.json'

      - name: Install ffmpeg and portaudio
        run: |
          ${{ env.VCPKG_ROOT }}/vcpkg install ffmpeg[avdevice,avfilter,avformat,swresample,swscale,postproc] portaudio --triplet ${{ matrix.os == 'windows-latest' && 'x64-windows' || matrix.os == 'macos-latest' && 'x64-osx' || 'x64-linux' }}

      - name: Configure CMake
        run: |
          cmake -S core/src/main/cpp -B build \
            -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_DIR }}

      - name: Build native library
        run: cmake --build build --config Release --parallel

      - name: Copy binaries
        run: |
          mkdir -p artifacts/${{ matrix.os }}/bin/klarity
          mkdir -p artifacts/${{ matrix.os }}/bin/ffmpeg
          mkdir -p artifacts/${{ matrix.os }}/bin/portaudio
          mkdir -p artifacts/${{ matrix.os }}/include/ffmpeg
          mkdir -p artifacts/${{ matrix.os }}/include/portaudio

          cp build/*.so* artifacts/${{ matrix.os }}/bin/klarity/ 2>/dev/null || true
          cp build/*.dylib artifacts/${{ matrix.os }}/bin/klarity/ 2>/dev/null || true
          cp build/*.dll artifacts/${{ matrix.os }}/bin/klarity/ 2>/dev/null || true

          cp -r ${{ env.VCPKG_ROOT }}/installed/${{ matrix.os == 'windows-latest' && 'x64-windows' || matrix.os == 'macos-latest' && 'x64-osx' || 'x64-linux' }}/bin/*ffmpeg* artifacts/${{ matrix.os }}/bin/ffmpeg/ || true
          cp -r ${{ env.VCPKG_ROOT }}/installed/${{ matrix.os == 'windows-latest' && 'x64-windows' || matrix.os == 'macos-latest' && 'x64-osx' || 'x64-linux' }}/bin/*portaudio* artifacts/${{ matrix.os }}/bin/portaudio/ || true

          cp -r ${{ env.VCPKG_ROOT }}/installed/${{ matrix.os == 'windows-latest' && 'x64-windows' || matrix.os == 'macos-latest' && 'x64-osx' || 'x64-linux' }}/include/ffmpeg artifacts/${{ matrix.os }}/include/ || true
          cp -r ${{ env.VCPKG_ROOT }}/installed/${{ matrix.os == 'windows-latest' && 'x64-windows' || matrix.os == 'macos-latest' && 'x64-osx' || 'x64-linux' }}/include/portaudio artifacts/${{ matrix.os }}/include/ || true

      - name: Build JARs
        run: |
          ./gradlew :core:shadowJar
          ./gradlew :compose:shadowJar
          ./gradlew :example:shadowJar

      - name: Copy JARs
        run: |
          mkdir -p artifacts/${{ matrix.os }}/jar
          cp core/build/libs/*.jar artifacts/${{ matrix.os }}/jar/core.jar || true
          cp compose/build/libs/*.jar artifacts/${{ matrix.os }}/jar/compose.jar || true
          cp example/build/libs/*.jar artifacts/${{ matrix.os }}/jar/example.jar || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: klarity-${{ matrix.os }}
          path: artifacts/${{ matrix.os }}